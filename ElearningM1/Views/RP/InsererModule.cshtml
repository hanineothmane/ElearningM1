@model ElearningM1.Models.Module
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
@{
    ViewBag.Title = "Ajout Module";
    if (Session["TypeUtilisateur"] == "RP")
    {
        Layout = "~/Views/Shared/_LayoutRP.cshtml";
    }
    else if (Session["TypeUtilisateur"] == "TE" || Session["TypeUtilisateur"] == "Admin")
    {
        Response.Redirect("Index");
    }
}
<head>
    <link rel="stylesheet" media="screen" type="text/css" title="Exemple" href="~/Content/css/materialize.css" />
    <link rel="stylesheet" media="screen" type="text/css" title="Exemple" href="~/Content/css/materialize.min.css" />
    <link rel="stylesheet" media="screen" type="text/css" title="Exemple" href="~/Content/css/style.css" />
</head>
<body>
    <h4>Ajouter un nouveau module</h4>
    <span style="color:red">@ViewBag.MessageErreur</span>
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.Label("Nom")
            <div class="input-group">
                @Html.TextBoxFor(m => m.Nom, new { @class = "form-control", @id = "inlineFormInputGroup" })
                @Html.ValidationMessageFor(m => m.Nom, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Date de création")
            <div class="input-group">
                @Html.TextBoxFor(m => m.DateCreation, new { @class = "form-control", @id = "inlineFormInputGroup" })
                @Html.ValidationMessageFor(m => m.DateCreation, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Coefficient")
            <div class="input-group">
                @Html.TextBoxFor(m => m.Coef, new { @class = "form-control", @id = "inlineFormInputGroup", @Value = "" })
                @Html.ValidationMessageFor(m => m.Coef, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Type de module")
            <div class="input-group">
                @Html.TextBoxFor(m => m.TypeModule, new { @class = "form-control", @id = "inlineFormInputGroup" })
                @Html.ValidationMessageFor(m => m.TypeModule, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Enseignant")
            @Html.DropDownList("id_te", new SelectList(ElearningM1.Models.TuteursEnseignant.getTuteursEnseignant(), "id", "nom"), new { @class = "form-control" })
            @Html.ActionLink("+ Ajouter un nouvel enseignant", "InsererTE", "RP")
        </div>

        <div class="form-group">
            @Html.Label("Session de regroupement")
            @Html.DropDownList("id_sr", new SelectList(ElearningM1.Models.SessionsRegroupement.getSessionsRegroupement(), "id", "date"), new { @class = "form-control" })
            @Html.ActionLink("+ Ajouter une nouvelle session", "InsererSessionReg", "RP")
        </div>



        <input type="submit" class="btn btn-primary" value="Valider" />
    }
</body>